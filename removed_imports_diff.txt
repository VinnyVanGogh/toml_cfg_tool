diff --git a/toml_cfg_tool/src/bkup.py b/toml_cfg_tool/src/bkup.py
index e4978fa..7bc2700 100755
--- a/toml_cfg_tool/src/bkup.py
+++ b/toml_cfg_tool/src/bkup.py
@@ -1,7 +1,7 @@
 # ./src/bkup.py
 import os
 import shutil
-from toml_cfg_tool.src.color_codes import BOLD, CYAN, LINK, ORANGE, END
+from toml_cfg_tool.src.color_codes import BOLD, CYAN, LINK, ORANGE
 from toml_cfg_tool.src.print_colors import print_two_colors
 
 def backup_file(file_path):
@@ -14,5 +14,5 @@ def backup_file(file_path):
     try:
         shutil.copy(file_path, backup_path)
         print_two_colors(BOLD, CYAN, "Created backup for ", file_path)
-    except Exception as e:
+    except Exception:
         print_two_colors(ORANGE, LINK, "Error creating backup for ", file_path)
diff --git a/toml_cfg_tool/src/contrib.py b/toml_cfg_tool/src/contrib.py
index 21b2ea6..f29e1d1 100755
--- a/toml_cfg_tool/src/contrib.py
+++ b/toml_cfg_tool/src/contrib.py
@@ -67,7 +67,7 @@ def create_contrib_file():
     github_dir = cwd / ".github"
     if github_dir.exists():
         print_two_colors(BOLD, LINK, "Creating CONTRIBUTING.md in .github directory", github_dir)
-        touch_path = github_dir / "CONTRIBUTING.md"
+        github_dir / "CONTRIBUTING.md"
         github_dir.mkdir(exist_ok=True)
         github_file_path = github_dir / "CONTRIBUTING.md"
         text = loop_replace_text(github_file_path, old_text_list, new_text_list)
diff --git a/toml_cfg_tool/src/creation.py b/toml_cfg_tool/src/creation.py
index 6a2e8a4..9cf79fc 100755
--- a/toml_cfg_tool/src/creation.py
+++ b/toml_cfg_tool/src/creation.py
@@ -1,14 +1,13 @@
 # ./src/creation.py 
 import os
 import shutil
-import datetime 
 import subprocess
 import toml
 import configparser
 import glob
 from pathlib import Path
 from toml_cfg_tool.src.config import template_text 
-from toml_cfg_tool.src.color_codes import BOLD, CYAN, LINK, ORANGE, END
+from toml_cfg_tool.src.color_codes import BOLD, CYAN, LINK, ORANGE
 from toml_cfg_tool.src.print_colors import print_two_colors
 
 SETUP_CFG_TEMPLATE = template_text()['SETUP_CFG_TEMPLATE']
diff --git a/toml_cfg_tool/src/updates_cfg.py b/toml_cfg_tool/src/updates_cfg.py
index ea04604..9577f3b 100755
--- a/toml_cfg_tool/src/updates_cfg.py
+++ b/toml_cfg_tool/src/updates_cfg.py
@@ -1,11 +1,8 @@
 # ./src/updates_cfg.py 
 import configparser 
-import os 
-import shutil 
 from toml_cfg_tool.src.bkup import backup_file
-from toml_cfg_tool.src.color_codes import BOLD, CYAN, LINK, ORANGE, END
+from toml_cfg_tool.src.color_codes import BOLD, CYAN, ORANGE, END
 from toml_cfg_tool.src.print_colors import print_two_colors
-from toml_cfg_tool.src.creation import get_github_repo_url
 
 def update_setup_cfg(file_path, repo_url, updates, dry_run=False, backup=False):
     
diff --git a/toml_cfg_tool/src/updates_toml.py b/toml_cfg_tool/src/updates_toml.py
index 8e5fd0e..ff77433 100755
--- a/toml_cfg_tool/src/updates_toml.py
+++ b/toml_cfg_tool/src/updates_toml.py
@@ -1,9 +1,8 @@
 # ./toml_cfg_tool/src/updates_toml.py 
 import toml 
 from toml_cfg_tool.src.bkup import backup_file
-from toml_cfg_tool.src.color_codes import BOLD, CYAN, LINK, ORANGE, END
+from toml_cfg_tool.src.color_codes import BOLD, CYAN, ORANGE
 from toml_cfg_tool.src.print_colors import print_two_colors
-from toml_cfg_tool.src.creation import get_github_repo_url
 
 
 def update_pyproject_toml(file_path, repo_url, updates, dry_run=False, backup=False):
diff --git a/toml_cfg_tool/toml_cfg_tool.py b/toml_cfg_tool/toml_cfg_tool.py
index acf99b8..c96bd0d 100755
--- a/toml_cfg_tool/toml_cfg_tool.py
+++ b/toml_cfg_tool/toml_cfg_tool.py
@@ -1,12 +1,7 @@
 #!/usr/bin/env python3
 
 import os
-import configparser
-import toml
-import argparse
 import sys
-import shutil
-import datetime
 from toml_cfg_tool.src.cli import parse_arguments
 from toml_cfg_tool.src.bkup import backup_file
 from toml_cfg_tool.src.creation import create_setup_cfg_template, create_pyproject_toml_template, create_workflow_files, get_github_repo_url
@@ -51,7 +46,7 @@ def main():
         updates['license'] = args.license
 
     if not args.workflow_files:
-        workflow_files = False
+        pass
     else:
         create_workflow_files()
 
